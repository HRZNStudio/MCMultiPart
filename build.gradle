buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}
plugins {
    id 'maven-publish'
}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'eclipse'

def BUILD_NUMBER = System.getenv("BUILD_NUMBER") ?: "2.1.24"
version = "${BUILD_NUMBER}"
group = 'com.hrznstudio'
archivesBaseName = 'mcmultipart'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    mappings channel: 'snapshot', version: '20190429-1.13.2'
    runs {
        client = {
            // recommended logging data for a userdev environment
            properties 'forge.logging.markers': 'SCAN,REGISTRIES,REGISTRYDUMP'
            // recommended logging level for the console
            properties 'forge.logging.console.level': 'debug'
            workingDirectory project.file('run').canonicalPath
            source sourceSets.main
        }
        server = {
            // recommended logging data for a userdev environment
            properties 'forge.logging.markers': 'SCAN,REGISTRIES,REGISTRYDUMP'
            // recommended logging level for the console
            properties 'forge.logging.console.level': 'debug'
            workingDirectory project.file('run').canonicalPath
            source sourceSets.main
        }
    }
}

repositories {
    mavenCentral()
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.13.2-25.0.191'
    compileOnly 'org.projectlombok:lombok:1.18.8'
}

jar {
    manifest {
        attributes(["Specification-Title": project.name,
                    "Specification-Vendor": "Horizon Studio",
                    "Specification-Version": "2.0",
                    "Implementation-Title": project.name,
                    "Implementation-Version": "${version}",
                    "Implementation-Vendor" :"Horizon Studio",
                    "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ"),
                    "Maven-Artifact": "${group}:${archivesBaseName}:${version}",
                    "ModSide": "BOTH",
        ],)

    }
}

task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task deobfJar(type:Jar) {
    from sourceSets.main.output
    classifier 'deobf'
}

artifacts {
    archives sourcesJar
    archives javadocJar
    archives deobfJar
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
            artifact sourcesJar
            artifact javadocJar
            artifact deobfJar
        }
    }
    repositories {
        maven {
            url "s3://cdn.hrzn.studio/maven"
            authentication {
                awsIm(AwsImAuthentication)
            }
        }
    }
}

processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property 'version', project.version
    inputs.property 'mcversion', '1.13'

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'META_INF/mods.toml'

        // replace version and mcversion
        expand 'version':project.version, 'mcversion': '1.13'
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'META_INF/mods.toml'
    }
}